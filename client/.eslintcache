[{"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\App.js":"1","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\index.js":"2","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\InputForm.js":"3","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\NewArticle.js":"4","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\Navbar.js":"5","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\Home.js":"6","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\Article.js":"7","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\DisplayArticle.js":"8","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\Articles.js":"9","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\PostContext.js":"10","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\useForm.js":"11","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\ValidateInput.js":"12"},{"size":1129,"mtime":1607526462067,"results":"13","hashOfConfig":"14"},{"size":317,"mtime":1606481871668,"results":"15","hashOfConfig":"14"},{"size":6087,"mtime":1607530996982,"results":"16","hashOfConfig":"14"},{"size":231,"mtime":1607457563765,"results":"17","hashOfConfig":"14"},{"size":1144,"mtime":1606938727489,"results":"18","hashOfConfig":"14"},{"size":150,"mtime":1606847650317,"results":"19","hashOfConfig":"14"},{"size":1284,"mtime":1607458332449,"results":"20","hashOfConfig":"14"},{"size":3453,"mtime":1607531104476,"results":"21","hashOfConfig":"14"},{"size":636,"mtime":1607457371102,"results":"22","hashOfConfig":"14"},{"size":1068,"mtime":1607452658822,"results":"23","hashOfConfig":"14"},{"size":2119,"mtime":1607540382152,"results":"24","hashOfConfig":"14"},{"size":1338,"mtime":1607364235485,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"3qf9ff",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\App.js",["57"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\n\nimport { PostProvider } from './components/PostContext';\n// Importing Pages\nimport Home from './layouts/Home';\nimport NewArticle from './layouts/NewArticle';\nimport Articles from './layouts/Articles';\nimport DisplayArticle from './layouts/DisplayArticle';\n\nfunction App() {\n  return (\n    <Router>\n      <PostProvider>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/Articles' exact component={Articles} />\n          <Route path='/NewArticle' exact component={NewArticle} />\n          <Route path='/Articles/:id' component={DisplayArticle} />\n        </Switch>\n      </PostProvider>\n    </Router>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer\n      className='mt-5 footer '\n      style={{\n        height: '50px',\n        background: '#999',\n        position: 'fixed',\n        width: '100%',\n        left: '0',\n        bottom: '0',\n        padding: '50px 0 0 0 ',\n      }}\n    ></footer>\n  );\n}\n\nexport default App;\n",["58","59"],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\index.js",["60","61"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n",["62","63"],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\InputForm.js",["64","65"],"import axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { PostContext } from '../components/PostContext';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { withRouter } from 'react-router-dom';\r\nimport useForm from './useForm';\r\nimport validate from './ValidateInput';\r\n// Main Function\r\n\r\nconst InputForm = withRouter(({ history, article, match }) => {\r\n  const [consent, setConsent] = useState(false);\r\n  const { refresh } = useContext(PostContext);\r\n  const [shouldGetData, setShouldGetData] = refresh;\r\n\r\n  // useForm Hook\r\n  const { handelChange, handleCancel, handleSubmit, values, errors } = useForm(\r\n    submit,\r\n    validate,\r\n    article,\r\n    consent,\r\n    setConsent,\r\n  );\r\n  // Functions\r\n\r\n  function submit(isEditMode) {\r\n    if (isEditMode == true) {\r\n      editData(match.params.id);\r\n      getLastData();\r\n\r\n      setShouldGetData(!shouldGetData);\r\n    } else {\r\n      sendData();\r\n      getLastData();\r\n      setShouldGetData(!shouldGetData);\r\n    }\r\n\r\n    console.log(`submitted ${isEditMode}`);\r\n  }\r\n\r\n  // Function for Sending Data to database\r\n\r\n  const sendData = async () => {\r\n    try {\r\n      const res = await axios({\r\n        method: 'post',\r\n        url: 'api/posts',\r\n        data: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      const resStatus = await res.status;\r\n      return resStatus;\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // Patch request\r\n\r\n  const editData = async id => {\r\n    const address = `http://localhost:5000/api/posts/${id}`;\r\n    try {\r\n      const res = await axios({\r\n        method: 'patch',\r\n        url: address, //`api/posts/${id}`,\r\n        data: JSON.stringify(values),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      console.log(address);\r\n      const resStatus = await res.status;\r\n      return resStatus;\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // Getting last saved data\r\n  const getLastData = async () => {\r\n    try {\r\n      const res = await axios.get('/api/posts/lts');\r\n      // Redirecting to created weblog\r\n      setTimeout(() => {\r\n        const id = res.data[0]._id;\r\n        history.push(`/Articles/`);\r\n        console.log(history.push);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  // destructuring inPuts\r\n  let { name, postBody, postTitle } = values;\r\n  //Render\r\n  return (\r\n    <div>\r\n      <form noValidate>\r\n        <div className='form-group mt-10'>\r\n          <label htmlFor='name' className='font-weight-bold mt-4'>\r\n            Enter Your Name\r\n          </label>\r\n          <div style={{ color: 'red' }}>\r\n            {errors.name && <small>{errors.name}</small>}\r\n          </div>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            name='name'\r\n            id='name'\r\n            placeholder='Name'\r\n            onChange={handelChange}\r\n            value={name || ''}\r\n            required\r\n          />\r\n          <label htmlFor='postTitle' className='font-weight-bold mt-4'>\r\n            Enter Article's Title\r\n          </label>\r\n          <div style={{ color: 'red' }}>\r\n            {errors.postTitle && <small>{errors.postTitle}</small>}\r\n          </div>\r\n          <input\r\n            type='text'\r\n            name='postTitle'\r\n            className='form-control'\r\n            id='postTitle'\r\n            placeholder='Title of your Article'\r\n            onChange={handelChange}\r\n            value={postTitle || ''}\r\n            required\r\n          />\r\n          <div className='form-row mt-4'>\r\n            <div className='form-group col'>\r\n              <label htmlFor='postBody' className='font-weight-bold mt-4'>\r\n                Markdown\r\n              </label>\r\n              <div style={{ color: 'red' }}>\r\n                {errors.postBody && <small>{errors.postBody}</small>}\r\n              </div>\r\n              <textarea\r\n                type='text'\r\n                name='postBody'\r\n                className='form-group col '\r\n                id='postBody'\r\n                placeholder='# My Article'\r\n                rows='10'\r\n                onChange={handelChange}\r\n                value={postBody || ''}\r\n              ></textarea>\r\n            </div>\r\n            <div className='form-group col-5 col-auto '>\r\n              <label htmlFor='markdown' className='font-weight-bold mt-4'>\r\n                Markdown-Display\r\n              </label>\r\n              <ReactMarkdown\r\n                id='markdown'\r\n                name='markdown'\r\n                className='border h-75'\r\n                source={postBody || ''}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type='submit'\r\n          className='btn-lg btn-primary'\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setConsent(!consent);\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n        <button className='btn-lg btn-secondary ml-4' onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n        {consent ? (\r\n          <div\r\n            className='center bg-light text-center pt-4 pd-2'\r\n            style={{\r\n              height: 150,\r\n              width: 300,\r\n              zIndex: 10,\r\n              position: 'absolute',\r\n              bottom: 20,\r\n              borderRadius: 10,\r\n              boxShadow: '1px 2px 5px 2px gray',\r\n            }}\r\n          >\r\n            <div>\r\n              <h5>Do you want to Save the post?</h5>\r\n              <button className='btn btn-danger m-2' onClick={handleSubmit}>\r\n                Yes\r\n              </button>\r\n              <button\r\n                className='btn btn-primary m-2'\r\n                onClick={e => {\r\n                  setConsent(false);\r\n                }}\r\n              >\r\n                No\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default InputForm;\r\n","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\NewArticle.js",[],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\Navbar.js",[],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\Home.js",[],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\Article.js",[],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\DisplayArticle.js",["66","67"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { PostContext } from '../components/PostContext';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport InputForm from '../components/InputForm';\r\nimport axios from 'axios';\r\n\r\nconst DisplayArticle = ({ history, match }) => {\r\n  const { refresh } = useContext(PostContext);\r\n  const articleId = match.params.id;\r\n  // useState\r\n\r\n  const [article, setArticle] = useState('');\r\n  const [consent, setConsent] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(true);\r\n  const [shouldGetData, setShouldGetData] = refresh; // this is from context\r\n\r\n  // Functions\r\n  const getData = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/api/posts/${articleId}`);\r\n      setArticle(data);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n  const deleteData = async () => {\r\n    try {\r\n      await axios.delete(`/api/posts/${articleId}`);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  function handleDelete() {\r\n    if (consent) {\r\n      deleteData();\r\n      setShouldGetData(!shouldGetData);\r\n      history.push('/Articles');\r\n    }\r\n  }\r\n\r\n  function handleIsEditMode() {\r\n    setConsent(false);\r\n    setIsEditMode(!isEditMode);\r\n  }\r\n  // UseEffects\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  function postDate() {\r\n    const dateOfPost = article.date;\r\n    if (dateOfPost) return dateOfPost.slice(0, 10).replace(/-/g, '/');\r\n  }\r\n\r\n  if (isEditMode == true) {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n        }}\r\n        className='container mt-4'\r\n      >\r\n        <img\r\n          className='card-img-top m-0'\r\n          src={`https://picsum.photos/500/300`}\r\n          alt='Card cap'\r\n        />\r\n        <h1 className='mt-4'>{article.postTitle}</h1>\r\n        <p className='text-muted '>Date: {postDate()}</p>\r\n        <ReactMarkdown source={article.postBody} />\r\n        <button className='btn-lg btn-info mt-2' onClick={handleIsEditMode}>\r\n          {isEditMode ? 'Edit' : 'Go Back'}\r\n        </button>\r\n        <button\r\n          onClick={() => setConsent(!consent)}\r\n          className={`btn-lg btn-danger m-2 `}\r\n          disabled={consent}\r\n        >\r\n          Delete\r\n        </button>\r\n        {consent ? (\r\n          <div\r\n            className='center bg-light text-center pt-4 pd-2'\r\n            style={{\r\n              height: 150,\r\n              width: 300,\r\n              zIndex: 10,\r\n              position: 'absolute',\r\n              bottom: 20,\r\n              borderRadius: 10,\r\n              boxShadow: '1px 2px 5px 2px gray',\r\n            }}\r\n          >\r\n            <div>\r\n              <h5>Do you want to delete the post?</h5>\r\n              <button className='btn btn-danger m-2' onClick={handleDelete}>\r\n                Yes\r\n              </button>\r\n              <button\r\n                className='btn btn-primary m-2'\r\n                onClick={() => setConsent(false)}\r\n              >\r\n                No\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      <InputForm article={article} />\r\n      <button className='btn-lg btn-info mt-2' onClick={handleIsEditMode}>\r\n        {isEditMode ? 'Edit' : 'Go Back'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayArticle;\r\n","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\layouts\\Articles.js",["68","69"],"import React, { useEffect, useContext } from 'react';\r\nimport { PostContext } from '../components/PostContext';\r\n//Importing  Components\r\nimport Article from '../components/Article';\r\n\r\nconst Articles = () => {\r\n  // Functions\r\n  const { posts, refresh } = useContext(PostContext);\r\n  const [articles, setArticles] = posts;\r\n  // UseEffects\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className='container pt-5  h-100 md-5'>\r\n      <h1>Articles</h1>\r\n      {articles.map((article, index) => (\r\n        <Article key={article._id} article={article} index={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\PostContext.js",[],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\useForm.js",["70","71"],"C:\\Users\\gagik\\Documents\\GitHub\\Dynamic-Blog\\client\\src\\components\\ValidateInput.js",[],{"ruleId":"72","severity":1,"message":"73","line":28,"column":10,"nodeType":"74","messageId":"75","endLine":28,"endColumn":16},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":9},{"ruleId":"72","severity":1,"message":"81","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"76","replacedBy":"82"},{"ruleId":"78","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":26,"column":20,"nodeType":"86","messageId":"87","endLine":26,"endColumn":22},{"ruleId":"72","severity":1,"message":"88","line":82,"column":15,"nodeType":"74","messageId":"75","endLine":82,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":51,"column":6,"nodeType":"91","endLine":51,"endColumn":8,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"85","line":58,"column":18,"nodeType":"86","messageId":"87","endLine":58,"endColumn":20},{"ruleId":"72","severity":1,"message":"93","line":8,"column":18,"nodeType":"74","messageId":"75","endLine":8,"endColumn":25},{"ruleId":"72","severity":1,"message":"94","line":9,"column":20,"nodeType":"74","messageId":"75","endLine":9,"endColumn":31},{"ruleId":"89","severity":1,"message":"95","line":50,"column":6,"nodeType":"91","endLine":50,"endColumn":14,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":55,"column":6,"nodeType":"91","endLine":55,"endColumn":8,"suggestions":"98"},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'$' is defined but never used.","'Popper' is defined but never used.",["99"],["100"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'refresh' is assigned a value but never used.","'setArticles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callBack', 'isEdit', and 'isSubmit'. Either include them or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [getData]",{"range":"110","text":"111"},"Update the dependencies array to be: [callBack, errors, isEdit, isSubmit]",{"range":"112","text":"113"},"Update the dependencies array to be: [init]",{"range":"114","text":"115"},[1352,1354],"[getData]",[1408,1416],"[callBack, errors, isEdit, isSubmit]",[1467,1469],"[init]"]